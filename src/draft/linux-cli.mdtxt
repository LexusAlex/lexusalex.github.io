---
layout: note.njk
tags: notes
number : 21
title: Linux. Командная строка.
description: Базовое использование команд git
date: 2021-02-21 23:30:00 +3
main_image: /assets/images/notes/15/main.png
gradient_image: /assets/images/notes/15/gradient.png
themes: linux git
---

## Структура команд в linux

Команда состоит из лексем разделенных пробелами в любых сочетаниях и последовательностях.
Сначала идет название команды, потом опции или ключи команды с аргументами или без и далее аргументы самой команды.

`{$|#} command { [-x arg1 arg2 ...] | --long-word} argument1 argument2 ...`

Далее интерпретатор определяет являться ли команда
- встроенной командой в интерпретатор
- внешней исполняемой программой

### Встроенные команды

Это команды которые встроены в оболочку `bash`. Они выполняются очень быстро, так как оболочка
не ищет исполняемый файл команды, так же для выполнения команды не нужно создавать процесс.

Существует предопределенный список команд встроенных в оболочку получить его можно выполнив команду `help`

```shell
help

 job_spec [&]                                                                                                  history [-c] [-d offset] [n] or history -anrw [filename] or history -ps arg [arg...]
 (( expression ))                                                                                              if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]... [ else COMMANDS; ] fi
 . filename [arguments]                                                                                        jobs [-lnprs] [jobspec ...] or jobs -x command [args]
 :                                                                                                             kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l [sigspec]
 [ arg... ]                                                                                                    let arg [arg ...]
 [[ expression ]]                                                                                              local [option] name[=value] ...
 alias [-p] [name[=value] ... ]                                                                                logout [n]
 bg [job_spec ...]                                                                                             mapfile [-d delim] [-n count] [-O origin] [-s count] [-t] [-u fd] [-C callback] [-c quantum] [array]
 bind [-lpsvPSVX] [-m keymap] [-f filename] [-q name] [-u name] [-r keyseq] [-x keyseq:shell-command] [keyse>  popd [-n] [+N | -N]
 break [n]                                                                                                     printf [-v var] format [arguments]
 builtin [shell-builtin [arg ...]]                                                                             pushd [-n] [+N | -N | dir]
 caller [expr]                                                                                                 pwd [-LP]
 case WORD in [PATTERN [| PATTERN]...) COMMANDS ;;]... esac                                                    read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name>
 cd [-L|[-P [-e]] [-@]] [dir]                                                                                  readarray [-d delim] [-n count] [-O origin] [-s count] [-t] [-u fd] [-C callback] [-c quantum] [array]
 command [-pVv] command [arg ...]                                                                              readonly [-aAf] [name[=value] ...] or readonly -p
 compgen [-abcdefgjksuv] [-o option] [-A action] [-G globpat] [-W wordlist] [-F function] [-C command] [-X f>  return [n]
 complete [-abcdefgjksuv] [-pr] [-DEI] [-o option] [-A action] [-G globpat] [-W wordlist] [-F function] [-C >  select NAME [in WORDS ... ;] do COMMANDS; done
 compopt [-o|+o option] [-DEI] [name ...]                                                                      set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
 continue [n]                                                                                                  shift [n]
 coproc [NAME] command [redirections]                                                                          shopt [-pqsu] [-o] [optname ...]
 declare [-aAfFgiIlnrtux] [-p] [name[=value] ...]                                                              source filename [arguments]
 dirs [-clpv] [+N] [-N]                                                                                        suspend [-f]
 disown [-h] [-ar] [jobspec ... | pid ...]                                                                     test [expr]
 echo [-neE] [arg ...]                                                                                         time [-p] pipeline
 enable [-a] [-dnps] [-f filename] [name ...]                                                                  times
 eval [arg ...]                                                                                                trap [-lp] [[arg] signal_spec ...]
 exec [-cl] [-a name] [command [argument ...]] [redirection ...]                                               true
 exit [n]                                                                                                      type [-afptP] name [name ...]
 export [-fn] [name[=value] ...] or export -p                                                                  typeset [-aAfFgiIlnrtux] [-p] name[=value] ...
 false                                                                                                         ulimit [-SHabcdefiklmnpqrstuvxPT] [limit]
 fc [-e ename] [-lnr] [first] [last] or fc -s [pat=rep] [command]                                              umask [-p] [-S] [mode]
 fg [job_spec]                                                                                                 unalias [-a] name [name ...]
 for NAME [in WORDS ... ] ; do COMMANDS; done                                                                  unset [-f] [-v] [-n] [name ...]
 for (( exp1; exp2; exp3 )); do COMMANDS; done                                                                 until COMMANDS; do COMMANDS; done
 function name { COMMANDS ; } or name () { COMMANDS ; }                                                        variables - Names and meanings of some shell variables
 getopts optstring name [arg ...]                                                                              wait [-fn] [-p var] [id ...]
 hash [-lr] [-p pathname] [-dt] [name ...]                                                                     while COMMANDS; do COMMANDS; done
 help [-dms] [pattern ...]                                                                                     { COMMANDS ; }
```

### Внешние команды

Напротив эти команды не встроены в оболочку. Оболочка ищет путь указанный в переменной `PATH`, а так же
создает новый процесс.

Определить какого типа для оболочки является команда, существует команда `type`

```shell
type umask 
umask is a shell builtin

```

https://www.youtube.com/watch?v=kbEKbmpZKzo&t=1511s

https://github.com/LexusAlex/old.lexusalex.blog/blob/master/archive/posts_old/linux-bash.md

https://hackware.ru/?p=3074
https://zalinux.ru/?p=1293